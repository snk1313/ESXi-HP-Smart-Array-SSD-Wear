zabbix_export:
  version: '5.2'
  date: '2024-11-28T08:02:56Z'
  groups:
    -
      name: Templates
  templates:
    -
      template: 'Template ESXi HP Smart Array SSD Wear 1 TBW'
      name: 'Template ESXi HP Smart Array SSD Wear 1 TBW'
      groups:
        -
          name: Templates
      applications:
        -
          name: 'HP Smart Array Wear'
      items:
        -
          name: 'Smart Array: Data Retrieval'
          type: SSH
          key: 'ssh.run[hpraid.data.retrieval]'
          delay: '10'
          trends: '0'
          value_type: TEXT
          params: |
            #enumerate-variables
            adudiag_dir="/tmp/adudiag"
            adudiag_extract="/tmp/adureport.extract"
            ssdwear_list_tmp="/tmp/ssdwear.list.tmp"
            weardata_tmp="/tmp/ssdweardata.tmp"
            weardata_out="/tmp/ssdweardata.out"
            hpacucli="/opt/smartstorageadmin/ssacli/bin/ssacli"
            ctrl_list=$(${hpacucli} ctrl all show |grep -oE 'Slot [0-9]+.*?' |awk '{print $2}' |xargs echo)
            
            #create-adudiag-dir
            mkdir $adudiag_dir
            rm -rf $weardata_out
            
            
            
            #dump-diag-report-and-unzip-it
            for slot in $ctrl_list;
              do
            	$hpacucli ctrl slot=$slot diag file=$adudiag_dir/adudiag_$slot.zip
              done
            echo "Adudiag report $adudiag_dir/adudiag_$slot.zip created"
            
            
            mkdir /tmp/adudiag/adudiag_$slot
            echo "unzipping $adudiag_dir/adudiag_$slot.zip to $adudiag_dir/adudiag_$slot"
            unzip $adudiag_dir/adudiag_$slot.zip -d $adudiag_dir/adudiag_$slot
            
            
            #extract-ssd-wear-information-from-adu-report
            grep -A10 "Workload Information" /tmp/adudiag/adudiag_$slot/ADUReport.txt > $adudiag_extract
            grep -E '.I:.:.|Total Bytes Written' $adudiag_extract > $ssdwear_list_tmp
            
            
            rm -rf $adudiag_dir
            rm -rf $adudiag_extract
            
            
            #create-status-file-based-on-ssacli-output
            echo -n > $weardata_tmp
            
            
            # enumerate all adapters and all physical drives on each adapter.
            echo "### pd section begin ###" >> $weardata_tmp
            for slot in $ctrl_list;
              do
                pd_list=$($hpacucli ctrl slot=$slot pd all show |grep -w physicaldrive |awk '{print $2}' |xargs echo)
              for pd in $pd_list;
                do
                  echo "### pd begin $slot $pd ###" >> $weardata_tmp
                  grep -A1 "$pd" $ssdwear_list_tmp | grep -v "$pd" >> $weardata_tmp
                  echo "### pd end $slot $pd ###" >> $weardata_tmp
                done
              done
            echo "### pd section end ###" >> $weardata_tmp
            
            
            mv $weardata_tmp $weardata_out
            rm -rf $ssdwear_list_tmp
            
            
            echo "OK"
          username: '{$ZABBIX_SSH_USER}'
          password: '{$ZABBIX_SSH_PASS}'
          applications:
            -
              name: 'HP Smart Array Wear'
      discovery_rules:
        -
          name: 'Physical Drives Discovery'
          type: SSH
          key: 'ssh.run[hpraid.pd.discovery]'
          delay: '10'
          params: |
            data="/tmp/ssdweardata.out"
            
            if [ -f $data ]; then
              pd_list=$(sed -n -e '/pd section begin/,/pd section end/p' $data |grep -w 'pd begin' |awk '{OFS=":"} {print $4,$5}')
              else echo "$data not found."; exit 1
            fi
            
            echo -n '{"data":['
              for pd in $pd_list; do echo -n "{\"{#PD}\":\"$pd\"},"; done |sed -e 's:\},$:\}:'
            echo -n ']}'
          username: '{$ZABBIX_SSH_USER}'
          password: '{$ZABBIX_SSH_PASS}'
          filter:
            conditions:
              -
                macro: '{#PD}'
                formulaid: A
          lifetime: '0'
          item_prototypes:
            -
              name: 'SSD {#PD} TBW'
              type: SSH
              key: 'ssh.run[hpraid.pd.wear.{#PD}]'
              delay: '10'
              history: 30d
              value_type: FLOAT
              params: |
                slot=$(echo "{#PD}" | cut -d ":" -f 1)
                pd=$(echo "{#PD}" | cut -d ":" -f 2-)
                sed -n -e "/pd begin $slot $pd/,/pd end $slot $pd/p" /tmp/ssdweardata.out |grep -wE '[ ]+Total Bytes Written \(TB\)' |awk '{print $5}'
              username: '{$ZABBIX_SSH_USER}'
              password: '{$ZABBIX_SSH_PASS}'
              applications:
                -
                  name: 'HP Smart Array Wear'
              trigger_prototypes:
                -
                  expression: '{last()}>1'
                  name: 'Smart Array: SSD {#PD} Wear is more than {ITEM.LASTVALUE} on {HOSTNAME}'
                  priority: WARNING
                -
                  expression: '{last()}>2'
                  name: 'Smart Array: SSD {#PD} Wear is more than {ITEM.LASTVALUE} on {HOSTNAME}'
                  priority: HIGH
      macros:
        -
          macro: '{$ZABBIX_SSH_PASS}'
          value: zabbixPassword
        -
          macro: '{$ZABBIX_SSH_USER}'
          value: zabbixUsername
